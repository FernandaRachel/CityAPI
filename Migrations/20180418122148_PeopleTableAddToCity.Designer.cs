// <auto-generated />
using CityAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CityAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180418122148_PeopleTableAddToCity")]
    partial class PeopleTableAddToCity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CityAPI.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityArea")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CityPopulation")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("CountryId");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("CityAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryArea");

                    b.Property<string>("CountryName");

                    b.Property<string>("CountryPopulation");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CityAPI.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CityId");

                    b.Property<string>("peopleAge")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("peopleHigh")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("peopleName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("CityAPI.Models.City", b =>
                {
                    b.HasOne("CityAPI.Models.Country")
                        .WithMany("City")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("CityAPI.Models.People", b =>
                {
                    b.HasOne("CityAPI.Models.City")
                        .WithMany("people")
                        .HasForeignKey("CityId");
                });
#pragma warning restore 612, 618
        }
    }
}
